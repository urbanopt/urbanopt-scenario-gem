var search_data = {"index":{"searchIndex":["urbanopt","scenario","extension","opendsspostprocessor","resultvisualization","scenariobase","scenariocsv","scenariodatapoint","scenariodefaultpostprocessor","scenariopostprocessorbase","scenariorunnerbase","scenariorunnerosw","simulationdirbase","simulationdirosw","simulationmapperbase","add_simulation_dir()","add_simulation_dir()","add_summary_results()","clear()","clear()","clear()","clear()","compute_transformer_results()","create_input_files()","create_input_files()","create_osw()","create_osw()","create_scenario_db_file()","create_simulation_files()","create_simulation_files()","create_visualization()","doc_templates_dir()","failed_job_path()","feature_location()","feature_type()","files_dir()","finished_job_path()","get_results()","in_osw()","in_osw_path()","load_data()","load_feature_report_data()","load_mapper_files()","load_opendss_data()","logger()","measures_dir()","merge_data()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","out_of_date?()","out_of_date?()","out_of_date?()","out_osw()","out_osw_path()","run()","run()","run()","run()","run()","run_dir()","run_dir()","run_dir()","save()","save()","save_csv()","save_opendss_scenario()","save_transformers_reports()","simulation_dirs()","simulation_dirs()","simulation_status()","simulation_status()","started_job_path()","changelog","contributing","rdoc_main","urbanopt-scenario-gem.lcov","package-lock.json"],"longSearchIndex":["urbanopt","urbanopt::scenario","urbanopt::scenario::extension","urbanopt::scenario::opendsspostprocessor","urbanopt::scenario::resultvisualization","urbanopt::scenario::scenariobase","urbanopt::scenario::scenariocsv","urbanopt::scenario::scenariodatapoint","urbanopt::scenario::scenariodefaultpostprocessor","urbanopt::scenario::scenariopostprocessorbase","urbanopt::scenario::scenariorunnerbase","urbanopt::scenario::scenariorunnerosw","urbanopt::scenario::simulationdirbase","urbanopt::scenario::simulationdirosw","urbanopt::scenario::simulationmapperbase","urbanopt::scenario::scenariodefaultpostprocessor#add_simulation_dir()","urbanopt::scenario::scenariopostprocessorbase#add_simulation_dir()","urbanopt::scenario::opendsspostprocessor#add_summary_results()","urbanopt::scenario::scenariobase#clear()","urbanopt::scenario::scenariodatapoint#clear()","urbanopt::scenario::simulationdirbase#clear()","urbanopt::scenario::simulationdirosw#clear()","urbanopt::scenario::opendsspostprocessor#compute_transformer_results()","urbanopt::scenario::simulationdirbase#create_input_files()","urbanopt::scenario::simulationdirosw#create_input_files()","urbanopt::scenario::scenariodatapoint#create_osw()","urbanopt::scenario::simulationmapperbase#create_osw()","urbanopt::scenario::scenariodefaultpostprocessor#create_scenario_db_file()","urbanopt::scenario::scenariorunnerbase#create_simulation_files()","urbanopt::scenario::scenariorunnerosw#create_simulation_files()","urbanopt::scenario::resultvisualization::create_visualization()","urbanopt::scenario::extension#doc_templates_dir()","urbanopt::scenario::simulationdirosw#failed_job_path()","urbanopt::scenario::scenariodatapoint#feature_location()","urbanopt::scenario::scenariodatapoint#feature_type()","urbanopt::scenario::extension#files_dir()","urbanopt::scenario::simulationdirosw#finished_job_path()","urbanopt::scenario::scenariorunnerosw#get_results()","urbanopt::scenario::simulationdirosw#in_osw()","urbanopt::scenario::simulationdirosw#in_osw_path()","urbanopt::scenario::opendsspostprocessor#load_data()","urbanopt::scenario::opendsspostprocessor#load_feature_report_data()","urbanopt::scenario::scenariocsv#load_mapper_files()","urbanopt::scenario::opendsspostprocessor#load_opendss_data()","urbanopt::scenario::logger()","urbanopt::scenario::extension#measures_dir()","urbanopt::scenario::opendsspostprocessor#merge_data()","urbanopt::scenario::extension::new()","urbanopt::scenario::opendsspostprocessor::new()","urbanopt::scenario::scenariobase::new()","urbanopt::scenario::scenariocsv::new()","urbanopt::scenario::scenariodatapoint::new()","urbanopt::scenario::scenariodefaultpostprocessor::new()","urbanopt::scenario::scenariopostprocessorbase::new()","urbanopt::scenario::scenariorunnerbase::new()","urbanopt::scenario::scenariorunnerosw::new()","urbanopt::scenario::simulationdirbase::new()","urbanopt::scenario::simulationdirosw::new()","urbanopt::scenario::simulationmapperbase::new()","urbanopt::scenario::scenariodatapoint#out_of_date?()","urbanopt::scenario::simulationdirbase#out_of_date?()","urbanopt::scenario::simulationdirosw#out_of_date?()","urbanopt::scenario::simulationdirosw#out_osw()","urbanopt::scenario::simulationdirosw#out_osw_path()","urbanopt::scenario::opendsspostprocessor#run()","urbanopt::scenario::scenariodefaultpostprocessor#run()","urbanopt::scenario::scenariopostprocessorbase#run()","urbanopt::scenario::scenariorunnerbase#run()","urbanopt::scenario::scenariorunnerosw#run()","urbanopt::scenario::scenariodatapoint#run_dir()","urbanopt::scenario::simulationdirbase#run_dir()","urbanopt::scenario::simulationdirosw#run_dir()","urbanopt::scenario::scenariodefaultpostprocessor#save()","urbanopt::scenario::scenariopostprocessorbase#save()","urbanopt::scenario::opendsspostprocessor#save_csv()","urbanopt::scenario::opendsspostprocessor#save_opendss_scenario()","urbanopt::scenario::opendsspostprocessor#save_transformers_reports()","urbanopt::scenario::scenariobase#simulation_dirs()","urbanopt::scenario::scenariocsv#simulation_dirs()","urbanopt::scenario::simulationdirbase#simulation_status()","urbanopt::scenario::simulationdirosw#simulation_status()","urbanopt::scenario::simulationdirosw#started_job_path()","","","","",""],"info":[["URBANopt","","URBANopt.html","","<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS …\n"],["URBANopt::Scenario","","URBANopt/Scenario.html","",""],["URBANopt::Scenario::Extension","","URBANopt/Scenario/Extension.html","",""],["URBANopt::Scenario::OpenDSSPostProcessor","","URBANopt/Scenario/OpenDSSPostProcessor.html","",""],["URBANopt::Scenario::ResultVisualization","","URBANopt/Scenario/ResultVisualization.html","",""],["URBANopt::Scenario::ScenarioBase","","URBANopt/Scenario/ScenarioBase.html","","<p>ScenarioBase is a simulation method agnostic description of a Scenario.\n"],["URBANopt::Scenario::ScenarioCSV","","URBANopt/Scenario/ScenarioCSV.html","",""],["URBANopt::Scenario::ScenarioDatapoint","","URBANopt/Scenario/ScenarioDatapoint.html","",""],["URBANopt::Scenario::ScenarioDefaultPostProcessor","","URBANopt/Scenario/ScenarioDefaultPostProcessor.html","",""],["URBANopt::Scenario::ScenarioPostProcessorBase","","URBANopt/Scenario/ScenarioPostProcessorBase.html","",""],["URBANopt::Scenario::ScenarioRunnerBase","","URBANopt/Scenario/ScenarioRunnerBase.html","",""],["URBANopt::Scenario::ScenarioRunnerOSW","","URBANopt/Scenario/ScenarioRunnerOSW.html","",""],["URBANopt::Scenario::SimulationDirBase","","URBANopt/Scenario/SimulationDirBase.html","",""],["URBANopt::Scenario::SimulationDirOSW","","URBANopt/Scenario/SimulationDirOSW.html","",""],["URBANopt::Scenario::SimulationMapperBase","","URBANopt/Scenario/SimulationMapperBase.html","",""],["add_simulation_dir","URBANopt::Scenario::ScenarioDefaultPostProcessor","URBANopt/Scenario/ScenarioDefaultPostProcessor.html#method-i-add_simulation_dir","(simulation_dir)","<p>Add results from a simulation_dir to this result.\n<p>parameters: &mdash; \n<p><code>simulation_dir</code> - <em>SimulationDirOSW</em> - An object …\n\n"],["add_simulation_dir","URBANopt::Scenario::ScenarioPostProcessorBase","URBANopt/Scenario/ScenarioPostProcessorBase.html#method-i-add_simulation_dir","(simulation_dir)","<p>Add results from a simulation_dir to this result.\n<p>parameters: &mdash; \n<p><code>simulation_dir</code> - <em>SimulationDirOSW</em> - An object …\n\n"],["add_summary_results","URBANopt::Scenario::OpenDSSPostProcessor","URBANopt/Scenario/OpenDSSPostProcessor.html#method-i-add_summary_results","(feature_report)","<p>create opendss json report results\n<p>parameters: &mdash; \n<p><code>feature_report</code> - _feature report object_ - An onject of …\n\n"],["clear","URBANopt::Scenario::ScenarioBase","URBANopt/Scenario/ScenarioBase.html#method-i-clear","()","<p>Removes all simulation input and output files by removing this Scenario&#39;s <code>run_dir</code> .\n"],["clear","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-i-clear","()","<p>Return the directory that this datapoint will run in.\n"],["clear","URBANopt::Scenario::SimulationDirBase","URBANopt/Scenario/SimulationDirBase.html#method-i-clear","()","<p>Clear the directory that this simulation runs in\n"],["clear","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-clear","()","<p>Clear the directory that this simulation runs in\n"],["compute_transformer_results","URBANopt::Scenario::OpenDSSPostProcessor","URBANopt/Scenario/OpenDSSPostProcessor.html#method-i-compute_transformer_results","()","<p>computer transformer results\n"],["create_input_files","URBANopt::Scenario::SimulationDirBase","URBANopt/Scenario/SimulationDirBase.html#method-i-create_input_files","()","<p>Create run directory and generate simulation inputs, all previous contents of directory are removed\n"],["create_input_files","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-create_input_files","()","<p>Create run directory and generate simulation OSW, all previous contents of directory are removed The …\n"],["create_osw","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-i-create_osw","()","<p>Create run directory and generate simulation OSW, all previous contents of directory are removed The …\n"],["create_osw","URBANopt::Scenario::SimulationMapperBase","URBANopt/Scenario/SimulationMapperBase.html#method-i-create_osw","(scenario, features, feature_names)","<p>create osw file given a ScenarioBase object, features, and feature_names\n<p>parameters: &mdash; \n<p><code>scenario</code> - <em>ScenarioBase</em> …\n"],["create_scenario_db_file","URBANopt::Scenario::ScenarioDefaultPostProcessor","URBANopt/Scenario/ScenarioDefaultPostProcessor.html#method-i-create_scenario_db_file","(file_name = @default_save_name)","<p>Create database file with scenario-level results\n\n<pre>Sum values for each timestep across all features. Save ...</pre>\n"],["create_simulation_files","URBANopt::Scenario::ScenarioRunnerBase","URBANopt/Scenario/ScenarioRunnerBase.html#method-i-create_simulation_files","(scenario, force_clear = false)","<p>Create all SimulationDirs for Scenario.\n<p>parameters: &mdash; \n<p><code>scenario</code> - <em>ScenarioBase</em> - Scenario to create simulation …\n"],["create_simulation_files","URBANopt::Scenario::ScenarioRunnerOSW","URBANopt/Scenario/ScenarioRunnerOSW.html#method-i-create_simulation_files","(scenario, force_clear = false)","<p>Create all OSWs for Scenario.\n<p>parameters: &mdash; \n<p><code>scenario</code> - <em>ScenarioBase</em> - Scenario to create simulation input …\n"],["create_visualization","URBANopt::Scenario::ResultVisualization","URBANopt/Scenario/ResultVisualization.html#method-c-create_visualization","(run_dir, feature = true, feature_names = false)",""],["doc_templates_dir","URBANopt::Scenario::Extension","URBANopt/Scenario/Extension.html#method-i-doc_templates_dir","()","<p>Doc templates are common files like copyright files which are used to update measures and other code. …\n"],["failed_job_path","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-failed_job_path","()","<p>Return the failed.job path\n"],["feature_location","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-i-feature_location","()","<p>Gets the type of a feature\n"],["feature_type","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-i-feature_type","()","<p>Gets the type of a feature\n"],["files_dir","URBANopt::Scenario::Extension","URBANopt/Scenario/Extension.html#method-i-files_dir","()","<p>Relevant files such as weather data, design days, etc.\n<p>return: &mdash; Absolute path of the files or nil if there …\n\n"],["finished_job_path","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-finished_job_path","()","<p>Return the finished.job path\n"],["get_results","URBANopt::Scenario::ScenarioRunnerOSW","URBANopt/Scenario/ScenarioRunnerOSW.html#method-i-get_results","(scenario, simulation_dirs)",""],["in_osw","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-in_osw","()","<p>Return the input OSW\n"],["in_osw_path","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-in_osw_path","()","<p>Return the input OSW path\n"],["load_data","URBANopt::Scenario::OpenDSSPostProcessor","URBANopt/Scenario/OpenDSSPostProcessor.html#method-i-load_data","()","<p>load feature report data and opendss data\n"],["load_feature_report_data","URBANopt::Scenario::OpenDSSPostProcessor","URBANopt/Scenario/OpenDSSPostProcessor.html#method-i-load_feature_report_data","()","<p>load feature report data\n"],["load_mapper_files","URBANopt::Scenario::ScenarioCSV","URBANopt/Scenario/ScenarioCSV.html#method-i-load_mapper_files","()","<p>Require all simulation mappers in mapper_files_dir\n"],["load_opendss_data","URBANopt::Scenario::OpenDSSPostProcessor","URBANopt/Scenario/OpenDSSPostProcessor.html#method-i-load_opendss_data","()","<p>load opendss data\n"],["logger","URBANopt::Scenario","URBANopt/Scenario.html#method-c-logger","()","<p>Definining class variable “@@logger” to log errors, info and warning messages.\n"],["measures_dir","URBANopt::Scenario::Extension","URBANopt/Scenario/Extension.html#method-i-measures_dir","()","<p>return: &mdash; Absolute path of the measures or nil if there is none, can be used when configuring OSWs.\n\n"],["merge_data","URBANopt::Scenario::OpenDSSPostProcessor","URBANopt/Scenario/OpenDSSPostProcessor.html#method-i-merge_data","(feature_report_data, opendss_data)","<p>merge data\n"],["new","URBANopt::Scenario::Extension","URBANopt/Scenario/Extension.html#method-c-new","()",""],["new","URBANopt::Scenario::OpenDSSPostProcessor","URBANopt/Scenario/OpenDSSPostProcessor.html#method-c-new","(scenario_report, opendss_results_dir_name = 'opendss')","<p>OpenDSSPostProcessor post-processes OpenDSS results to selected OpenDSS results and integrate them in …\n"],["new","URBANopt::Scenario::ScenarioBase","URBANopt/Scenario/ScenarioBase.html#method-c-new","(name, root_dir, run_dir, feature_file)","<p>Initialize ScenarioBase attributes: <code>name</code> , +root directory+ , +run directory+ and <code>feature_file</code>\n<p>parameters: … &mdash; \n"],["new","URBANopt::Scenario::ScenarioCSV","URBANopt/Scenario/ScenarioCSV.html#method-c-new","(name, root_dir, run_dir, feature_file, mapper_files_dir, csv_file, num_header_rows)","<p>ScenarioCSV is a ScenarioBase which assigns a Simulation Mapper to each Feature in a FeatureFile using …\n"],["new","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-c-new","(scenario, feature_id, feature_name, mapper_class)","<p>ScenarioDatapoint is an agnostic description of the simulation of a Feature in a Scenario A Simulation …\n"],["new","URBANopt::Scenario::ScenarioDefaultPostProcessor","URBANopt/Scenario/ScenarioDefaultPostProcessor.html#method-c-new","(scenario_base)","<p>ScenarioPostProcessorBase post-processes a scenario to create scenario level results\n<p>parameters: &mdash; \n<p><code>scenario_base</code> …\n\n"],["new","URBANopt::Scenario::ScenarioPostProcessorBase","URBANopt/Scenario/ScenarioPostProcessorBase.html#method-c-new","(scenario_base)","<p>ScenarioPostProcessorBase post-processes a Scenario to create scenario level results.\n<p>parameters: &mdash; \n<p><code>scenario_base</code> …\n\n"],["new","URBANopt::Scenario::ScenarioRunnerBase","URBANopt/Scenario/ScenarioRunnerBase.html#method-c-new","()","<p>ScenarioRunnerBase is the agnostic interface for a class which can create and run SimulationFiles.\n"],["new","URBANopt::Scenario::ScenarioRunnerOSW","URBANopt/Scenario/ScenarioRunnerOSW.html#method-c-new","()","<p>ScenarioRunnerOSW is a class to create and run SimulationFileOSWs\n"],["new","URBANopt::Scenario::SimulationDirBase","URBANopt/Scenario/SimulationDirBase.html#method-c-new","(scenario, features, feature_names)","<p>SimulationDirBase is the agnostic representation of a directory of simulation input files.\n<p>parameters: … &mdash; \n"],["new","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-c-new","(scenario, features, feature_names, mapper_class)","<p>SimulationDirOSW creates a OSW file to simulate features, a SimulationMapperBase is invoked to translate …\n"],["new","URBANopt::Scenario::SimulationMapperBase","URBANopt/Scenario/SimulationMapperBase.html#method-c-new","()","<p>perform initialization functions\n"],["out_of_date?","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-i-out_of_date-3F","()","<p>Return true if the datapoint is out of date, false otherwise.  Non-existant files are out of date.\n<p>return: … &mdash; "],["out_of_date?","URBANopt::Scenario::SimulationDirBase","URBANopt/Scenario/SimulationDirBase.html#method-i-out_of_date-3F","()","<p>Return true if the simulation is out of date (input files newer than results), false otherwise. Non-existant …\n"],["out_of_date?","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-out_of_date-3F","()","<p>Return true if the simulation is out of date (input files newer than results), false otherwise. Non-existant …\n"],["out_osw","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-out_osw","()","<p>Return the output OSW\n"],["out_osw_path","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-out_osw_path","()","<p>Return the output OSW path\n"],["run","URBANopt::Scenario::OpenDSSPostProcessor","URBANopt/Scenario/OpenDSSPostProcessor.html#method-i-run","()","<p>run opendss post_processor\n"],["run","URBANopt::Scenario::ScenarioDefaultPostProcessor","URBANopt/Scenario/ScenarioDefaultPostProcessor.html#method-i-run","()","<p>Run the post processor on this Scenario.This will add all the simulation_dirs.\n"],["run","URBANopt::Scenario::ScenarioPostProcessorBase","URBANopt/Scenario/ScenarioPostProcessorBase.html#method-i-run","()","<p>Run the post processor on this Scenario.\n"],["run","URBANopt::Scenario::ScenarioRunnerBase","URBANopt/Scenario/ScenarioRunnerBase.html#method-i-run","(scenario, force_clear = false, options = {})","<p>Create and run all SimulationFiles for Scenario.\n<p>parameters: &mdash; \n<p><code>scenario</code> - <em>ScenarioBase</em> - Scenario to create …\n"],["run","URBANopt::Scenario::ScenarioRunnerOSW","URBANopt/Scenario/ScenarioRunnerOSW.html#method-i-run","(scenario, force_clear = false, options = {})","<p>Create and run all SimulationFileOSW for Scenario. A staged runner is implented to run buildings, then …\n"],["run_dir","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-i-run_dir","()","<p>Return the directory that this datapoint will run in.\n<p>return: &mdash; <em>String</em> - Directory that this datapoint will …\n\n"],["run_dir","URBANopt::Scenario::SimulationDirBase","URBANopt/Scenario/SimulationDirBase.html#method-i-run_dir","()","<p>Return the directory that this simulation will run in\n"],["run_dir","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-run_dir","()","<p>Return the directory that this simulation will run in.\n"],["save","URBANopt::Scenario::ScenarioDefaultPostProcessor","URBANopt/Scenario/ScenarioDefaultPostProcessor.html#method-i-save","(file_name = @default_save_name)","<p>Save scenario result\n<p>parameters: &mdash; \n<p><code>file_name</code> - <em>String</em> - Assign a name to the saved scenario results file …\n\n"],["save","URBANopt::Scenario::ScenarioPostProcessorBase","URBANopt/Scenario/ScenarioPostProcessorBase.html#method-i-save","()","<p>Save scenario result.\n"],["save_csv","URBANopt::Scenario::OpenDSSPostProcessor","URBANopt/Scenario/OpenDSSPostProcessor.html#method-i-save_csv","(feature_report, updated_feature_report_csv, file_name = 'default_feature_report')","<p>Save csv report method\n<p>parameters: &mdash; \n<p><code>feature_report</code> - _feature report object_ - An onject of the feature …\n"],["save_opendss_scenario","URBANopt::Scenario::OpenDSSPostProcessor","URBANopt/Scenario/OpenDSSPostProcessor.html#method-i-save_opendss_scenario","()","<p>save opendss scenario fields\n"],["save_transformers_reports","URBANopt::Scenario::OpenDSSPostProcessor","URBANopt/Scenario/OpenDSSPostProcessor.html#method-i-save_transformers_reports","()","<p>add feature reports for transformers\n"],["simulation_dirs","URBANopt::Scenario::ScenarioBase","URBANopt/Scenario/ScenarioBase.html#method-i-simulation_dirs","()","<p>An array of SimulationDirBase objects.\n"],["simulation_dirs","URBANopt::Scenario::ScenarioCSV","URBANopt/Scenario/ScenarioCSV.html#method-i-simulation_dirs","()","<p>Gets all the simulation directories\n"],["simulation_status","URBANopt::Scenario::SimulationDirBase","URBANopt/Scenario/SimulationDirBase.html#method-i-simulation_status","()","<p>Returns simulation status one of {&#39;Not Started&#39;, &#39;Started&#39;, &#39;Complete&#39;, &#39;Failed&#39;} …\n"],["simulation_status","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-simulation_status","()","<p>Return simulation status one of {&#39;Not Started&#39;, &#39;Started&#39;, &#39;Complete&#39;, &#39;Failed&#39;} …\n"],["started_job_path","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-started_job_path","()","<p>Return the started.job path\n"],["CHANGELOG","","CHANGELOG_md.html","","<p>URBANopt Scenario Gem\n<p>Version 0.8.0\n<p>Date Range: 11/23/21 - 05/10/22\n"],["CONTRIBUTING","","CONTRIBUTING_md.html","","<p>URBANopt Contribution Policy\n<p>Version 1.0\n<p>The URBANopt&lt;sup&gt;™&lt;/sup&gt; team welcomes your contribution …\n"],["RDOC_MAIN","","RDOC_MAIN_md.html","","<p>URBANopt Scenario Gem\n<p>back to main docs\n<p>The URBANopt™ Scenario Gem includes functionality for defining …\n"],["urbanopt-scenario-gem.lcov","","coverage/lcov/urbanopt-scenario-gem_lcov.html","","<p>SF:./lib/urbanopt/scenario.rb DA:41,1 DA:42,1 DA:43,1 DA:45,1 DA:46,1 DA:47,1 DA:48,1 DA:49,1 DA:50,1 …\n"],["package-lock.json","","package-lock_json.html","","<p>{\n\n<pre>&quot;lockfileVersion&quot;: 1</pre>\n<p>}\n"]]}}